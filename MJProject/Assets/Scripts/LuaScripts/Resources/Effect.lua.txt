Effect = {}
local NewVector3 = CS.UnityEngine.Vector3
local Instantiate = CS.UnityEngine.Object.Instantiate
local Load = CS.UnityEngine.Resources.Load
local Destroy = CS.UnityEngine.Object.Destroy
local LogWarning = CS.UnityEngine.Debug.LogWarning
local prefabTable = {}
local objectTable = {}
local _disableObjPool = {}
_disableObjPool_front = 1
_disableObjPool_rear = 0
Effect._effect_name = {
	operationShowSmoke = "Effect_smoke_01_Position",--操作的烟
	maybeOperationShowCircle = "Effect_chess_prompt_02_Position",--可能操作的
	currentDapaiPoint = "Effect_chess_prompt_01_Position",--上一张打的牌
	gangShangKaiHua = "Effect_bloom_01_4.0_Postion",
	huPaiColumn = "Effect_brand_01 1_Position",--自己胡牌
	fallMoney = "Effect_Enter_01_4.0_Position",--掉钱
	rain = "Effect_rain_01_Position",
	manyCannon = "Effect_special_display_01_Position",--一炮多响
	goldIngot = "Effect_Touch treasure_01_4.0_Position",--元宝
	gold_ui = "UI_flash_lizi_01",
	gem_ui = "UI_flash_lizi_02",
	head_ui = "Effect_UI_Head portrait_01_Position",
}
Effect.operationShowSmokeOffset = NewVector3(0,-0.0072,0)
Effect.currentDapaiPointOffset = NewVector3(0,0.0386,0)
Effect.maybeOperationShowCircleOffset = NewVector3(0,-0.005,0)

function Effect.GetDisableObjPool(effectName)
	-- body
	if _disableObjPool_front > _disableObjPool_rear then
        return nil
    else
    	local changeIndex = nil
    	local tempData = nil
    	for k,v in pairs(_disableObjPool) do
    		if v.name == effectName.."(Clone)" then
    			changeIndex = k
    			break
    		end
    	end
    	if changeIndex then
    		local tempObj = _disableObjPool[changeIndex]
    		_disableObjPool[changeIndex] = _disableObjPool[_disableObjPool_front]
    		_disableObjPool[_disableObjPool_front] = tempObj
    	else
    		return nil
    	end
        tempData = _disableObjPool[_disableObjPool_front]
        tempData:SetActive(true)
        _disableObjPool[_disableObjPool_front] = nil
        _disableObjPool_front = _disableObjPool_front + 1
        return tempData
    end
end

function Effect.SetDisableObjPool(cacheObj)
    -- body
    _disableObjPool_rear = _disableObjPool_rear + 1
    cacheObj:SetActive(false)
    _disableObjPool[_disableObjPool_rear] = cacheObj
end


function Effect.AddUIEffect(effectName,effectScale,effectFather,effectPos,targetSize)
	-- body
	if not prefabTable[effectName] then
		prefabTable[effectName] = Load("Effect/"..effectName)
	end
	if effectName == "Effect_UI_Head portrait_01_Position" then
		objectTable[effectName] = Instantiate(prefabTable[effectName])
		local x = GGraph()
		effectFather:AddChild(x)
		x:SetNativeObject(GoWrapper(objectTable[effectName]))
		if effectPos then
			x.displayObject.xy = effectPos
		end
		objectTable[effectName].transform.localScale = effectScale
		return x
		--LogWarning(objectTable[effectName].transform:Find("UI_plane002"):GetComponent("Renderer").bounds.size.x)
	end
	if not objectTable[effectName] then
		objectTable[effectName] = Instantiate(prefabTable[effectName])
		local x = GGraph()
		effectFather:AddChild(x)
		x:SetNativeObject(GoWrapper(objectTable[effectName]))
		if effectPos then
			x.displayObject.xy = effectPos
		end
		objectTable[effectName].transform.localScale = effectScale
	end
end

function Effect.AddNormalEffect(effectName,effectScale,effectFather,offsetPos)
	-- body
	if not prefabTable[effectName] then
		prefabTable[effectName] = Load("Effect/"..effectName)
	end
	local tempObj = Effect.GetDisableObjPool(effectName)
	if not objectTable[effectName] then
		objectTable[effectName] = {}
		objectTable[effectName].rear = 0
		objectTable[effectName].front = 1
	end
	if tempObj then
		objectTable[effectName].rear = objectTable[effectName].rear + 1
		objectTable[effectName][objectTable[effectName].rear] = tempObj
	else
		objectTable[effectName].rear = objectTable[effectName].rear + 1
		objectTable[effectName][objectTable[effectName].rear] = Instantiate(prefabTable[effectName])
	end
	if effectFather then
		objectTable[effectName][objectTable[effectName].rear].transform.position = effectFather.transform.position + offsetPos
	else
		objectTable[effectName][objectTable[effectName].rear].transform.position = offsetPos
	end
end

function Effect.DeleteEffect(effectName)
	-- body
	if objectTable[effectName] and objectTable[effectName].front <= objectTable[effectName].rear then
		Effect.SetDisableObjPool(objectTable[effectName][objectTable[effectName].front])
		objectTable[effectName].front = objectTable[effectName].front + 1
		--Destroy(objectTable[effectName])
	end
end

return Effect