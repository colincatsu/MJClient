local Enum = require "Enum"
local Player = require "Player"
Player.self = self
local ClickEvent = require "ClickEvent"
ClickEvent.self = self
local Network = require "Network"
local FLibEvent = require "FLibEvent"
local FairyGUI = require "FairyGUI"
local AssetManager = require "AssetManager"
local AudioPlayer = require "AudioPlayer"

local _main_ui_sence = "FairyMainUI"
local _loading_sence = "LoadingSence"
local _play_sence = "PlaySence"
--[[
local isOn = false
local _Main_UI 
local _Choose_UI 
local _Player_Message_UI 
local _Other_Message_UI 
local _Store_UI 
local _Creat_Room_UI 
--]]
function awake()
	-- body
	ClickEvent.Awake()
	CS.UnityEngine.Screen.sleepTimeout = CS.UnityEngine.SleepTimeout.NeverSleep
end

function start()
	-- body
	if not Player._connected then
		Network.Start()
		Network.ConnetServer()
	end
	ClickEvent.uiPanel.ui:GetChild("LoadingBar").visible = false
	if Player._connected then
		if Player.returnMainUI then
			ClickEvent.Start(ClickEvent.panelTable._choose_ui)
		else
			if Player._tosence_name and Player._tosence_name ~= "PlaySence" then
				ClickEvent.Start(ClickEvent.panelTable._main_ui)
			end
		end
	end
	Player.LoadData()
	--[[
	_Main_UI = self.transform:Find("MainUI").gameObject
	local admitButton = _Main_UI.transform:Find("Admit").gameObject
	isOn = admitButton:GetComponent("Toggle").isOn
	_Choose_UI = self.transform:Find("ChooseUI").gameObject
	_Choose_UI:SetActive(false)
	_Player_Message_UI = self.transform:Find("PlayerMessage").gameObject
	_Other_Message_UI = self.transform:Find("OtherMessage").gameObject
	_Store_UI = self.transform:Find("StoreUI").gameObject
	_Creat_Room_UI = self.transform:Find("CreatRoom").gameObject
	--]]

	---[[
	--]]
	--AudioPlayer.PlaySound(AudioPlayer._audio_name.Bgm,true,0.5)
end

function update( ... )
	-- body
	Player.myUpdate()
	--[[
	if Player.self == self then
		local x = Player.GetinvokeFunctionCache()
		if x then
			x()
		end
	end
	print("jxy")
	--]]
end

return MainUICT
