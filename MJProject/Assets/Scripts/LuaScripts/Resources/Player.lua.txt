local protobuf = require "protobuf"
local AssetManager = require "AssetManager"
local LoadingCT = require "LoadingCT"
--local rapidjson = require "rapidjson"
local gbk = require "gbk"

---------------------------------------------------------------------------
--成员变量
---------------------------------------------------------------------------
Player = {}
local LogWarning = CS.UnityEngine.Debug.LogWarning
local this = Player
local _player_data = nil --玩家登录数据
local _my_player_data = nil --房间内玩家数据
Player._all_players_data = {}
Player._client_infomation = {}
local _id = nil
local _password = ""
local _roomId = nil
local _rightId = 0
local _crossId = 0
local _leftId = 0
local _invoke_data = ""
local _invoke_table = {}
local _invoke_table_test= {}
local _pai_operation_alert_cache = {} --玩家可进行操作的牌缓存
local _pais_operation_alert_cache = {} --玩家可进行操作的多张牌缓存
local _operation_alert_cache = {} --玩家可操作缓存
local _fa_pai_cache = {}
local _da_pai_cache = {}
_da_pai_cache.front = 1
_da_pai_cache.rear = 0
local _pai_operation_show_cache = {}
_pai_operation_show_cache.front = 1
_pai_operation_show_cache.rear = 0

local _ting_pai_cache = {}--听

local operationState = Enum.CreateEnumTable({"WAIT", "PENG", "GANG", "CHI", "HU", "DAPAI", "XUANFENGGANGFENG", "XUANFENGGANGJIAN", "ANGANG", "TINGPAI", "BAOPAI"},-1)

local _invokeFunctionTable = {}
_invokeFunctionTable.front = 1
_invokeFunctionTable.rear = 0

local _calculate_data = {}--结算数据
Player._all_calculate_data = {}--所有结算数据
Player.activityDataTable = {}--活动数据
Player.activityTable = {}
Player.purchaseDataTable = {}--支付数据
Player.storeDataTable = {}--商店数据
Player._calculate_table_number = 0
Player._room_information = {}--房间信息
Player._room_calculate_data = nil--房间结算

Player.isWaitingList = false
Player.waitingTimestamp = 0
local _banker_position = 0
local _calculate_table_loader = {}--计算读表
local _tosence_name = nil
Player._connected = false
local returnMainUI = false
local isTingPaied = false
local isTuoGuan = false
local isTingPaiTuoGuan = false
Player.hasOperation = false
Player.startOperation = false
Player.hasBeginned = false
Player.roomHasBegin = false
Player.isGangPaiing = false
Player._tosence_name = "FairyMainUI"
Player.huPaiPosition = -1
Player._string_id = nil
Player.wechat_code = ""
Player.wechat_nickname = ""
Player.wechat_sex = ""
Player.wechat_headimgurl = ""
local WeChatPlatform = CS.Platform.Instance
WeChatPlatform.onPurchaseSuccess = Player.OnPurchaseSuccess
Player.isFriendRoom = false
Player.voiceRoomName = ""
Player.latitude = -1.0
Player.longitude = -1.0
Player.isPlaying = false
Player.isPlayerPaiShowing = false
Player.hasPlayedRoundEnd = false
Player.hasShowIPSame = false
Player.playerScore = {--游戏每家分数保存
    [0] = 0,
    [1] = 0,
    [2] = 0,
    [3] = 0,
}

Player.operation_calculate_data = {
    [0] = {operationNumber = 0,},
    [1] = {operationNumber = 0,},
    [2] = {operationNumber = 0,},
    [3] = {operationNumber = 0,},
}
Player.baopai_calculate_data = {}
Player.hupai_calculate_data = {}
Player.pai_push_down = {}

Player.history_data = {}
Player.history_count = 0
Player.current_history_index = 0
Player.history_start = 0
Player.history_end = 0

Player.dismissInterval = 180
Player.dismissTimestarmp = nil
Player.dismissHasClicked = false
Player.dismissIsShowing = false

Player.coolDown = nil
Player.moveTitleTimestamp = nil
Player.moveInterval = 45

Player.reConnect = false
Player.disConnetedTime = nil
Player.connectTimes = 3
Player.hasConnectTimes = 0
Player.connectCountDownTime = 5
Player.isTimeOut = false
Player.sayHiTimeOut = 15
Player.pc_version = "1.0.1.0901"

Player.sayHiTimestarmp = nil

Player.baopaiPosition = nil

function Player.LoadData( ... )
    -- body
    if next(Player.activityDataTable) == nil then
        local AssetManager = require "AssetManager"
        local resultPath = CS.LuaCommon.resultPath
        if CS.LuaCommon.isAndroid and CS.LuaCommon.isAndroid == true then
            resultPath = CS.UnityEngine.Application.persistentDataPath.."/MyAssets/"
        end
        local loader = AssetManager.Load(resultPath.."Asset/Asset/")
        local message = AssetManager.GetMessagesByType("ASSET_TYPE_COMMON_CONST")
        local data = AssetManager.PrintDecodeMessage(message,"Adoter.Asset.CommonConst")
        for k,v in pairs(data) do
            Player.activityDataTable =  v
        end

        message = AssetManager.GetMessagesByType("ASSET_TYPE_RECHARGE")
        Player.purchaseDataTable = AssetManager.PrintDecodeMessage(message,"Adoter.Asset.Recharge")
        for k,v in pairs(Player.purchaseDataTable) do
            WeChatPlatform:AddProductData(v.product_id,v.price,v.common_prop.global_id - 1310721)
        end
        WeChatPlatform:startBilling()
        message = AssetManager.GetMessagesByType("ASSET_TYPE_MALL")
        Player.storeDataTable = AssetManager.PrintDecodeMessage(message,"Adoter.Asset.Mall")
        --[[
        AssetManager.PrintMessage(Player.storeDataTable)
        message = AssetManager.GetMessagesByType("ASSET_TYPE_ROOM_FAN")
        Player._calculate_table_loader = AssetManager.PrintDecodeMessage(message,"Adoter.Asset.RoomFan")
        --]]
        --Player.LogWarning(Player.activityDataTable.room_card_limit_free_activity_id)
    end
end

function Player.LogWarning(para)
    -- body
    --CS.UnityEngine.Debug.LogWarning(para)
end

function Player.GetinvokeFunctionCache()
    -- body
    if _invokeFunctionTable.front > _invokeFunctionTable.rear then
        return nil
    else
        local tempData = _invokeFunctionTable[_invokeFunctionTable.front]
        _invokeFunctionTable.front = _invokeFunctionTable.front + 1
        return tempData
    end
end
function Player.SetinvokeFunctionCache(cacheData)
    -- body
    _invokeFunctionTable.rear = _invokeFunctionTable.rear + 1
    _invokeFunctionTable[_invokeFunctionTable.rear] = cacheData
end

function Player.GetDaPaiCache()
    -- body
    if _da_pai_cache.front > _da_pai_cache.rear then
        return nil
    else
        local tempData = _da_pai_cache[_da_pai_cache.front]
        _da_pai_cache.front = _da_pai_cache.front + 1
        return tempData
    end
end
function Player.SetDaPaiCache(cacheData)
    -- body
    _da_pai_cache.rear = _da_pai_cache.rear + 1
    _da_pai_cache[_da_pai_cache.rear] = cacheData
end

function Player.GetPaiOperationShowCache()
    -- body
    if _pai_operation_show_cache.front > _pai_operation_show_cache.rear then
        return nil
    else
        local tempData = _pai_operation_show_cache[_pai_operation_show_cache.front]
        _pai_operation_show_cache.front = _pai_operation_show_cache.front + 1
        return tempData
    end
end
function Player.SetPaiOperationShowCache(cacheData)
    -- body
    _pai_operation_show_cache.rear = _pai_operation_show_cache.rear + 1
    _pai_operation_show_cache[_pai_operation_show_cache.rear] = cacheData
end

function Player.GetGpsInformation()
    -- body
    --WeChatPlatform.gpsGet = Player.GpsCallBack
    --WeChatPlatform:GetGps()
end
function Player.GpsCallBack(latitude,longitude)
    -- body
    Player.latitude = latitude
    Player.longitude = longitude
    Player.LogWarning("jxyGps:"..tostring(Player.latitude))
    Player.LogWarning("jxyGps:"..tostring(Player.longitude))
    WeChatPlatform.gpsGet = nil
    if Player.latitude == -1.0 then

    else
        --Player.CmdUpdateClientData(38.115556395496299,13.361389338970184)
        Player.CmdUpdateClientData(Player.latitude,Player.longitude)
    end
end

function Player.OnPurchaseSuccess(purchaseID,purchasePrice)
    -- body
    Player.CmdUserRecharge("RECHARGE_TYPE_IOS",purchaseID,productPrice)
end
---------------------------------------------------------------------------
--获取玩家ID
---------------------------------------------------------------------------

function Player.GetID()
	return _my_player_data.common_prop.player_id
end


---------------------------------------------------------------------------
--游戏场景功能
---------------------------------------------------------------------------
--重置游戏ing
function Player.ResetGameState()
    -- 按钮
    ClickEvent._play_ui.oppositePlayerTing.visible = false
    ClickEvent._play_ui.frontPlayerTing.visible = false
    ClickEvent._play_ui.behindPlayerTing.visible = false
    ClickEvent._play_ui.playerTing.visible = false
    ClickEvent._play_ui.gamePlayButton.visible = false
    --玩家打牌池
    local dapaiFatherTemp = _pai_pool_show.point_d.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_d.father)
    _pai_pool_show.point_d.paiNumber = 0
    _pai_pool_show.point_d.father = CS.UnityEngine.GameObject("Father")
    _pai_pool_show.point_d.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_d.cards = {}

    dapaiFatherTemp = _pai_pool_show.point_n.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_n.father)
    _pai_pool_show.point_n.paiNumber = 0
    _pai_pool_show.point_n.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_n.cards = {}

    dapaiFatherTemp = _pai_pool_show.point_x.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_x.father)
    _pai_pool_show.point_x.paiNumber = 0
    _pai_pool_show.point_x.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_x.cards = {}

    dapaiFatherTemp = _pai_pool_show.point_b.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_b.father)
    _pai_pool_show.point_b.paiNumber = 0
    _pai_pool_show.point_b.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_b.cards = {}
    --碰牌池
    dapaiFatherTemp = _operation_pai_show.point_d.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_d.father)
    _operation_pai_show.point_d.paiNumber = 0
    _operation_pai_show.point_d.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_d.group = {}
    
    dapaiFatherTemp = _operation_pai_show.point_n.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_n.father)
    _operation_pai_show.point_n.paiNumber = 0
    _operation_pai_show.point_n.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_n.group = {}
    
    dapaiFatherTemp = _operation_pai_show.point_x.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_x.father)
    _operation_pai_show.point_x.paiNumber = 0
    _operation_pai_show.point_x.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_x.group = {}
    
    dapaiFatherTemp = _operation_pai_show.point_b.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_b.father)
    _operation_pai_show.point_b.paiNumber = 0
    _operation_pai_show.point_b.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_b.group = {}
    
    --玩家手牌
    CS.UnityEngine.Object.Destroy(_player_pai_pool._next_player_father)
    _player_pai_pool._next_player_father = CS.UnityEngine.GameObject("Father")
    _player_pai_pool._next_player_father.transform:SetParent(_player_pai_pool._next_player.transform)
    _player_pai_pool._next_pai_number = 0
    _player_pai_pool._next_card = {}

    CS.UnityEngine.Object.Destroy(_player_pai_pool._opposite_player_father)
    _player_pai_pool._opposite_player_father = CS.UnityEngine.GameObject("Father")
    _player_pai_pool._opposite_player_father.transform:SetParent(_player_pai_pool._opposite_player.transform)
    _player_pai_pool._opposite_pai_number = 0
    _player_pai_pool._opposite_card = {}

    CS.UnityEngine.Object.Destroy(_player_pai_pool._forward_player_father)
    _player_pai_pool._forward_player_father = CS.UnityEngine.GameObject("Father")
    _player_pai_pool._forward_player_father.transform:SetParent(_player_pai_pool._forward_player.transform)
    _player_pai_pool._forward_pai_number = 0
    _player_pai_pool._forward_card = {}

    --玩家面前牌
    CS.UnityEngine.Object.Destroy(_player_father.father)
    _player_father = {}
    ClickEvent._play_ui.gamePlayButton.visible = true
end


---------------------------------------------------------------------------
--加载场景!!!!!!!type_t，记得添加
---------------------------------------------------------------------------
function Player.LoadScene(senceName, buffer)
    for k,v in pairs(ClickEvent._createObject) do
        if type(v) == "table" then
            for j,c in pairs(v) do
                c:Dispose()
            end
        else
            v:Dispose()
        end
    end
    Player._tosence_name = senceName
    if senceName == "PlaySence" then
        Player.CmdLoadScene("LOAD_SCENE_TYPE_START",this._roomId)
    end
    Effect.DestroyObj()
    CS.UnityEngine.Resources.UnloadUnusedAssets()
    CS.UnityEngine.SceneManagement.SceneManager.LoadSceneAsync("LoadingSence")
end

---------------------------------------------------------------------------
--每帧更新
---------------------------------------------------------------------------
local movePos = CS.UnityEngine.Vector3(0,0,0)
function Player.myUpdate( ... )
    -- body
    ClickEvent.UpdateTime()
    if Player.reConnect and Player.disConnetedTime then
        if (CS.UnityEngine.Time.time - Player.disConnetedTime) >= Player.connectCountDownTime then
            Network.Start()
            Network.ConnetServer()
            Player.disConnetedTime = CS.UnityEngine.Time.time
            Player.hasConnectTimes = Player.hasConnectTimes + 1
        end
        if Player.hasConnectTimes >= Player.connectTimes then
            Player.hasConnectTimes = 0
            Player.reConnect = false
            Player.disConnetedTime = nil
            Player.isTimeOut = true
            if Player._tosence_name == "PlaySence" then
                ClickEvent.ShowNotMoveToast(2029,5)
            else
                ClickEvent.ShowNotMoveToast(2033,5)
            end
        end
    end

    if Player.reConnect == false and Player._connected == false then
        if ClickEvent.IsPopPanel(ClickEvent.panelTable._window_small) == false and ClickEvent.IsPopPanel(ClickEvent.panelTable._not_move_toast_ui) == false and ClickEvent.IsMainUI(ClickEvent.panelTable._choose_ui) then
            ClickEvent.ShowSmallWindow(2038)
        end
    end

    if not Player.moveTitleTimestamp then
        Player.moveTitleTimestamp = CS.UnityEngine.Time.time
        ClickEvent.PlayMoveTitle()
    else
        if (CS.UnityEngine.Time.time - Player.moveTitleTimestamp) >= Player.moveInterval then
            Player.moveTitleTimestamp = CS.UnityEngine.Time.time
            ClickEvent.PlayMoveTitle()
        end
    end
    --[[
    --]]
    if Player.sayHiTimestarmp and CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name ~= "LoadingSence" then
        if CS.UnityEngine.Time.time - Player.sayHiTimestarmp > Player.sayHiTimeOut then
            Player.sayHiTimestarmp = CS.UnityEngine.Time.time
            ClickEvent.ShowNotMoveToast(2028)
            if not Player.disConnetedTime then
                Network.OnClose()
                Player.disConnetedTime = CS.UnityEngine.Time.time
            end
            Player.reConnect = true
            if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" then
                ClickEvent.CloseOperationPanel()
            end
        end
    end

    if Player.dismissIsShowing == true and Player.dismissHasClicked == false then
        if ClickEvent.IsPopPanel(ClickEvent.panelTable._vote_ui) == true then
            if math.modf(CS.UnityEngine.Time.time - Player.dismissTimestarmp) <= Player.activityDataTable.room_dismiss_timeout then
                ClickEvent.ShowDissolveTime(Player.activityDataTable.room_dismiss_timeout - math.modf(CS.UnityEngine.Time.time - Player.dismissTimestarmp))
            else
                Player.dismissHasClicked = true
                Player.CmdGameOperation("GAME_OPER_TYPE_DISMISS_AGREE")
            end
        end
    end

    if CS.UnityEngine.Input.GetKeyDown(CS.UnityEngine.KeyCode.Escape) then
        if ClickEvent.IsPopPanel(ClickEvent.panelTable._vote_ui) == true then
            return
        end
        if ClickEvent.IsPopPanel(ClickEvent.panelTable._calculate_ui) == true then
            return
        end
        if ClickEvent.IsPopPanel(ClickEvent.panelTable._room_calculate_ui) == true then
            return
        end
        if ClickEvent.Close() == false then
            if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" then
                ClickEvent.PopPanel(ClickEvent.panelTable._window_small)
                ClickEvent.PopPanelShowText("PopWindowsSmallShowText",StringTable.Get(2003))
            elseif CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "FairyMainUI" then
                ClickEvent.PopPanel(ClickEvent.panelTable._window_small)
                ClickEvent.PopPanelShowText("PopWindowsSmallShowText",StringTable.Get(2002))
            end
        end
    end

    if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" then
        if CS.UnityEngine.Application.platform == CS.UnityEngine.RuntimePlatform.IPhonePlayer or CS.UnityEngine.Application.platform == CS.UnityEngine.RuntimePlatform.Android then
            if CS.UnityEngine.Input.touchCount > 0 then
                local touchPoint = CS.UnityEngine.Input.touches[0]
                if touchPoint.phase == CS.UnityEngine.TouchPhase.Began then
                    movePos = CS.UnityEngine.Vector3(touchPoint.position.x,touchPoint.position.y,0.35)
                    Player.MahJong.CheckClickPos(movePos)
                end
            end
        else
            if CS.UnityEngine.Input.GetMouseButtonDown(0) then
                movePos = CS.UnityEngine.Input.mousePosition
                movePos.z = 0.35
                Player.MahJong.CheckClickPos(movePos)
            end
        end
    end
    if Player.isWaitingList == true then
        ClickEvent._play_ui.waitingPopTime.text = math.modf(CS.UnityEngine.Time.time - Player.waitingTimestamp)
    end
end


---------------------------------------------------------------------------
--数据封装
---------------------------------------------------------------------------

function Player.CmdBuySomething(mallID)
    -- body
    buySomething = {
        mall_id = mallID,
    }
    this.SendProtocol("BuySomething",buySomething)
end

function Player.CmdUserRecharge(type,productID,productPrice)
    -- body
    userRecharge = {
        recharge_type = type,
        product_id = productID,
        price = productPrice,
    }
    this.SendProtocol("UserRecharge",userRecharge)
end

function Player.CmdGetRoomData(roomID)
    -- body
    getRoomData = {
        room_id = roomID,
    }
    this.SendProtocol("GetRoomData",getRoomData)
end

function Player.CmdBattleHistory(startIndex,endIndex)
    -- body
    battleHistory = {
        start_index = startIndex,
        end_index = endIndex,
    }
    this.SendProtocol("BattleHistory",battleHistory)
end

function Player.CmdSwitchAccount(account,playerId)
    -- body
    switchAccount = {
        account_name = account,
        player_id = playerId,
    }
    this.SendProtocol("SwitchAccount",switchAccount)
end

function Player.CmdSystemChat(chatType,chatIndex)
    -- body
    systemChat = {
        chat_type = chatType,
        index = chatIndex,
    }
    this.SendProtocol("SystemChat",systemChat)
end

function Player.CmdReConnect()
    -- body
    reConnect = {
        player_id = Player._player_data.common_prop.player_id,
    }
    this.SendProtocol("ReConnect",reConnect)
end

function Player.CmdGameSetting(musicSet,voiceSet,audioSet,click_pushSet)
    -- body
    gameSetting = {
        game_setting = {
            music = musicSet,
            voice = voiceSet,
            audio = audioSet,
            click_push = click_pushSet,
        },
    }
    this.SendProtocol("GameSetting",gameSetting)
end

function Player.CmdUpdateClientData(latitudeInfo,longitudeInfo)
    -- body
    updateClientData = {
        client_info = {
            location = {
                longitude = longitudeInfo,
                latitude = latitudeInfo,
            },
        },
    }
    this.SendProtocol("UpdateClientData",updateClientData)
end

function Player.CmdCreatePlayer()
    -- body
    local createPlayer = {}
    this.SendProtocol("CreatePlayer",createPlayer)
end

function Player.CmdGuestLogin()
    -- body
    local guestLogin = {}
    this.SendProtocol("GuestLogin",guestLogin)
end

function Player.CmdWechatLogin(m_access_code)
    -- body
    local wechatLogin = {
        access_code = m_access_code,
       -- account_type = "ACCOUNT_TYPE_WECHAT",
    }
    this.SendProtocol("WechatLogin",wechatLogin)
end

function Player.CmdLogin(name,passWord,accountType)
    -- body
    local login = {
        account = {
            username = name,--""
            --password = passWord,--""
            account_type = accountType,
        },
        --account_type = "ACCOUNT_TYPE_8HERE",
    }
    this.SendProtocol("Login",login)
end

function Player.CmdEnterGame(id)
    -- body
    local enterGame = {
        player_id = id,
    }
    this.SendProtocol("EnterGame",enterGame)
end

function Player.CmdCreateRoom(room_model,room_extend_type,room_top_mutiple,room_open_rands)
    -- body
    local createRoom ={
        room = {
            options = {
                model = room_model,
                extend_type = room_extend_type,
                top_mutiple = room_top_mutiple,
                open_rands = room_open_rands,
            },
            --room_id = roomId,--1,
            --room_name = name,--"123",
            --enter_password  = passWord,--"123",
        },
    }
    this.SendProtocol("CreateRoom",createRoom)
end

function Player.CmdEnterRoom(roomType,id,passWord)
    -- body
    local enterRoom = {
        room = {
            room_id = id,--2;
            room_type = roomType,
            --enter_password = passWord,--"123";
        },
        
    }
    this.SendProtocol("EnterRoom",enterRoom)
end

function Player.CmdGameOperation(operationType)
    -- body
    local gameOperation = {
       oper_type = operationType
    }
    this.SendProtocol("GameOperation",gameOperation)
end

function Player.CmdPaiOperation(paiOperType,paiChiTable,paiDaTable)
    -- body
    Player.LogWarning("---------------ClientOperation")
    Player.LogWarning(paiOperType)
    local paiOperation = {
        oper_type = paiOperType,
        pais = paiChiTable,
        pai = paiDaTable,
    }
    this.SendProtocol("PaiOperation",paiOperation)
end

---------------------------------------------------------------------------
--进入场景
---------------------------------------------------------------------------
function Player.CmdLoadScene(loadType,sceneId)
    local loadScene = {
        load_type = loadType,
        scene_id = sceneId,
    }
    Player.LogWarning("jxyDebugLoadSence"..loadType)
    this.SendProtocol("LoadScene",loadScene)
end
---------------------------------------------------------------------------
--发送协议
---------------------------------------------------------------------------
---[[
function Player.SendProtocol(messageName,message)
    Network.SendProtocol(messageName,message)
end
---------------------------------------------------------------------------
--进入游戏
---------------------------------------------------------------------------
--[[
function Player.CmdEnterGame(player_id)
    local enter_game = P_Protocol.EnterGame()
    enter_game.player_id = player_id
    -------------------------------------------
    this.SendProtocol(enter_game)
end
--]]
--]]

--[[
    协议处理：
    
    1.在Network中注册接收协议对应的响应函数；
    
    2.在本文件中实现响应函数；
--]]
---------------------------------------------
--------------type_t!!!!!!!!!!!!
---------------------------------------------
--

function Player.OnUpdateClientData(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.UpdateClientData",stuff)
    Player.LogWarning("ip_address:"..message.client_info.client_ip)
    if message.client_info.client_ip and message.client_info.client_ip ~= "" then
        Player._client_infomation = message.client_info
    end
end

function Player.OnRoomBeenIn(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RoomBeenIn",stuff)
    if message.room_id then
        if message.room_id == 0 then
            Player._player_data.room_id = message.room_id
        else
            Player._player_data.room_id = message.room_id
            ClickEvent.ShowLeaveRoom(2036)
        end
    end
end

function Player.OnBattleHistory(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.BattleHistory",stuff)
    for k,v in pairs(message.history_list) do
        local hasSameData = false
        for j,c in pairs(Player.history_data) do
            if c.room_id == v.room_id then
                hasSameData = true
            end
        end
        if hasSameData == false then
            Player.current_history_index = Player.current_history_index + 1
            Player.history_data[Player.current_history_index] = v
        end
    end

    table.sort(Player.history_data,function(a,b) return a.create_time>b.create_time end)

    Player.history_start = message.start_index
    Player.history_end = Player.current_history_index
    Player.LogWarning("battleHistoryCurrent:"..Player.current_history_index)
    Player.LogWarning("battleHistoryStart:"..Player.history_start.."battleHistoryEnd:"..Player.history_end)
    ClickEvent.OnReceiveHistory()
end

function Player.OnRoomDisMiss(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RoomDisMiss",stuff)
    if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" and ClickEvent.IsPopPanel(ClickEvent.panelTable._room_calculate_ui) == false then
        ClickEvent.ShowDissolvePanel(message.list)
    end
end

function Player.OnRoomState(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RoomState",stuff)
    if message.room_id then
        if message.room_id == 0 then
            Player._player_data.room_id = message.room_id
        else
            Player._player_data.room_id = message.room_id
            ClickEvent.ShowLeaveRoom(2036)
            return
        end
    end
    if message.oper_type == "GAME_OPER_TYPE_LEAVE" then
        if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" then
            Player.returnMainUI = true
            Player.MahJong.QuitVoiceRoom()
            --Player.LoadScene("FairyMainUI")
            ClickEvent.ShowLeaveRoom(2034)
        end
    elseif message.oper_type == "GAME_OPER_TYPE_DISMISS_AGREE" then
        if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" then
            ClickEvent.Close()
            Player.dismissIsShowing = false
            Player.returnMainUI = true
            Player.MahJong.QuitVoiceRoom()
            ClickEvent.ShowLeaveRoom(2009)
        end
    elseif message.oper_type == "GAME_OPER_TYPE_DISMISS_DISAGREE" then
        if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" then
            ClickEvent.Close()
            Player.dismissIsShowing = false
            ClickEvent.ShowToast(StringTable.Get(2011))
        end
    elseif message.oper_type == "GAME_OPER_TYPE_HOSTER_DISMISS" then
        if CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name == "PlaySence" then
            ClickEvent.Close()
            Player.dismissIsShowing = false
            Player.returnMainUI = true
            Player.MahJong.QuitVoiceRoom()
            ClickEvent.ShowLeaveRoom(2009)
        end
    end
end

function Player.OnSystemChat(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.SystemChat",stuff)
    ClickEvent.ShowEmoji(message.position,message.chat_type,message.index)
end

function Player.OnGameSetting(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameSetting",stuff)
    Player._player_data.game_setting.music = message.game_setting.music
    Player._player_data.game_setting.voice = message.game_setting.voice
    Player._player_data.game_setting.audio = message.game_setting.audio
    Player._player_data.game_setting.click_push = message.game_setting.click_push
end

function Player.OnGuestLogin(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GuestLogin",stuff)
    Player._string_id = message.account
    local path = CS.UnityEngine.Application.persistentDataPath.."/"
    local mFile = io.open(path.."guestID.txt" ,"w")
    mFile:write(Player._string_id)  
    mFile:close()
    Player.CmdLogin(Player._string_id,nil,"ACCOUNT_TYPE_GUEST")
end

function Player.OnGameStart(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameStart",stuff)
    if message.total_rounds and message.current_rounds then
        Player._room_information.options.open_rands = message.total_rounds
        ClickEvent.UpdateRoundNumber(message.current_rounds,message.total_rounds)
    end
end

function Player.OnWeChatInfo(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.WeChatInfo",stuff)
    if not message.wechat and message.wechat_error then
        WeChatPlatform:LoginWeChat()
    else
        local path = CS.UnityEngine.Application.persistentDataPath.."/"
        if not message.wechat.openid or message.wechat.openid == "" then
            return
        end
        Player._string_id = message.wechat.openid
        local mFile = io.open(path.."openID.txt" ,"w")
        mFile:write(Player._string_id)  
        mFile:close()
        Player.wechat_nickname = gbk.toutf8(gbk.fromutf8(message.wechat.nickname))
        Player.wechat_sex = message.wechat.sex
        Player.wechat_headimgurl = message.wechat.headimgurl
        Player.CmdLogin(Player._string_id,nil,"ACCOUNT_TYPE_WECHAT")
    end
end

function Player.OnSyncCommonProperty(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.SyncCommonProperty",stuff)
    if Player._player_data and Player._player_data.common_prop.player_id == message.player_id then
        Player._player_data.common_prop = message.common_prop
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Bean,false,1)
        ClickEvent.CommonPropertyUpdate()
    end
end

function Player.OnLiuJu(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.LiuJu",stuff)
    ClickEvent.SetRemainNum(16)
    Player.MahJong.LiuJuPai(message.elements)
end

function Player.OnPaiPushDown(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiPushDown",stuff)
    Player.pai_push_down = message.player_list
    Player.MahJong.PaiPushDown(message.player_list)
end

function Player.OnGameInformation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameInformation",stuff)
    if not message.banker_player_id then
        Player.LogWarning("banker_player_id is nil")
        return
    end
    if not Player._all_players_data then
        Player.LogWarning("_all_players_data is nil")
        return
    end

    for k,v in pairs(Player._all_players_data) do
        if message.banker_player_id == v.common_prop.player_id then
            ClickEvent.BankerStateUpdate(v.position)
            break
        end
    end
end

function Player.OnRoomCalculate(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RoomCalculate",stuff)
    Player.hasBeginned = false
    Player._room_calculate_data = message
    if Player._calculate_table_number >= Player._room_information.options.open_rands then
        --ClickEvent.ShowRoomCalculate()
    end
    if message.calculte_type == "CALCULATE_TYPE_DISMISS" then
       ClickEvent.ShowRoomCalculate() 
    end
end

function Player.OnGameCalculate(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameCalculate",stuff)
    Player._calculate_data = message
    if message.record then
        Player._calculate_table_number = Player._calculate_table_number + 1
        Player._all_calculate_data[Player._calculate_table_number] = message.record
    end
    --Player.ThreadFunction()
    Player.hasBeginned = false
    if Player._calculate_table_number >= Player._room_information.options.open_rands then
    end
    Player.isPlaying = false
    Player.MahJong.OnRoundEndShowEffect(Player._calculate_data)
end

function Player.OnSyncCommonReward(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.SyncCommonReward",stuff)
end

function Player.OnRoomInformation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RoomInformation",stuff)
    if message.player_list then
        for k,v in pairs(message.player_list) do
            Player.LogWarning("playerState:"..v.oper_type)
            if message.sync_type == "ROOM_SYNC_TYPE_NORMAL" then
                Player._all_players_data[k] = v
                if v.common_prop.player_id == Player._player_data.common_prop.player_id then
                    Player._my_player_data = v
                    --Player.ThreadFunction(
                    Player.MahJong.UpdateMyDataState()
                end
            else
                for j,m in pairs(Player._all_players_data) do
                    if m.position == v.position then
                        m.oper_type = v.oper_type
                    end
                end
            end
            --[[
            if v.oper_type == "GAME_OPER_TYPE_NULL" or v.oper_type == "GAME_OPER_TYPE_ONLINE" or v.oper_type == "GAME_OPER_TYPE_START" then
            elseif v.oper_type == "GAME_OPER_TYPE_OFFLINE" then
                for j,m in pairs(Player._all_players_data) do
                    if m.position == v.position then
                        m.oper_type = v.oper_type
                        break
                    end
                end
            end
            --]]
        end
        if Player._my_player_data then
            --Player.ThreadFunction(
            ClickEvent.RoomInformationUpdate()
        end
        ClickEvent.CloseAlready()
        for k,v in pairs(Player._all_players_data) do
            if v.oper_type == "GAME_OPER_TYPE_START" then
                if not Player.isPlaying and Player._my_player_data then
                    ClickEvent.ShowAlready(v.common_prop.player_id)
                end
            end
        end
    else
        Player.LogWarning("list null")
    end

    for k,v in pairs(Player._all_players_data) do
        for j,c in pairs(Player._all_players_data) do
            if v.common_prop.player_id ~= c.common_prop.player_id and v.ip_address == c.ip_address and Player.hasShowIPSame == false then
                Player.hasShowIPSame = true
                ClickEvent.ShowSmallWindow(2037)
                return
            end
        end
    end
end

function Player.OnPlayerInformation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PlayerInformation",stuff)
    if not message.player then
        return
    end
    --[[
    if not Player._player_data then
        Player._player_data = message.player
        --Player.ThreadFunction(
    else
    end
    --]]
    Player._player_data = message.player
    Player.GetGpsInformation()
    local mMusic = true
    local mVoice = true
    local mAudio = true
    if Player._player_data and Player._player_data.game_setting ~= {} then
        Player.LogWarning("jxyjxyjxy")
        Player.LogWarning(Player._player_data.game_setting.music)
        Player.LogWarning(Player._player_data.game_setting.voice)
        Player.LogWarning(Player._player_data.game_setting.audio)
        mMusic = Player._player_data.game_setting.music
        mVoice = Player._player_data.game_setting.voice
        mAudio = Player._player_data.game_setting.audio
    end
    Player._player_data.game_setting.music = mMusic
    Player._player_data.game_setting.voice = mVoice
    Player._player_data.game_setting.audio = mAudio
    Player.history_count = 0
    for k,v in pairs(Player._player_data.room_history) do
        Player.history_count = Player.history_count + 1
    end
    Player.LogWarning("historyCount:"..Player.history_count)
    --[[
    if not Player._player_data.game_setting.music or Player._player_data.game_setting == {} then
    end
    if not Player._player_data.game_setting.voice or Player._player_data.game_setting == {} then
    end
    if not Player._player_data.game_setting.audio or Player._player_data.game_setting == {} then
    end
    --]]
    if Player._tosence_name ~= "PlaySence" then
        ClickEvent.ThreadToMainMenu()
    end
end

function Player.OnJoinRoomComplete(code,roomName, memberID)
    -- body
    WeChatPlatform.m_voiceengine:OpenMic()
    WeChatPlatform.m_voiceengine:OpenSpeaker()
end

function Player.OnSyncActivity(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.SyncActivity",stuff)
    Player.activityTable = message.activity_list
end

function Player.OnEnterRoom(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.EnterRoom",stuff)
    if message.error_code == "ERROR_SUCCESS" then
        Player._room_information = message.room
        this._roomId = message.room.room_id
        Player.LoadScene("PlaySence")
    elseif message.error_code == "ERROR_ROOM_NOT_FOUNT" then
        Player._player_data.room_id = 0
        ClickEvent.ShowSmallWindow(2010)
        Player.LogWarning("no found")
    elseif message.error_code == "ERROR_ROOM_IS_FULL" then
        ClickEvent.ShowSmallWindow(2008)
        Player.LogWarning("is full")
    end
    Player.LogWarning(message.error_code)
end

function Player.OnPlayerList(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PlayerList",stuff)
    Player.LogWarning("---------")
    if message.player_list then
        Player._id = message.player_list[1]
        Player.LogWarning(Player._id)
    end
    if Player._id and Player_id ~= "" then
        Player.CmdEnterGame(Player._id)
    end
    if not message.wechat.nickname or message.wechat.nickname == "" then
        return
    end

    --[[
    local jsonData = rapidjson.decode(message.wechat.json_wechat)
    Player.wechat_nickname = gbk.toutf8(gbk.fromutf8(jsonData.nickname))
    local tempData = rapidjson.encode(message.wechat.json_wechat)
    print(jsonData.nickname)
    --]]
    Player.wechat_nickname = gbk.toutf8(gbk.fromutf8(message.wechat.nickname))
    Player.wechat_sex = message.wechat.sex
    Player.wechat_headimgurl = message.wechat.headimgurl

    Player.LogWarning(Player.wechat_nickname)
    --Player.ThreadFunction(ClickEvent.CreateNewPanel,ClickEvent.panelTable._choose_ui)
    --Player.CmdEnterGame(12)
end

function Player.OnPaiOperationAlert(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiOperationAlert",stuff)

    if not message.pais then
        Player.LogWarning("pais data is nil")
        return
    end

    --[[
    if not message.pai then
        if not message.pais then
            Player.LogWarning("pais is nil")
            return
        end
        Player._pais_operation_alert_cache = message.pais
    else
        Player._pai_operation_alert_cache = message.pai
    end
    --]]
    Player._operation_alert_cache = message
    Player.hasOperation = true
    Player.startOperation = true
    --Player.ThreadFunction(
    if Player.isPlayerPaiShowing == true then
        ClickEvent.PaiOperationState()
    end
end

function Player.OnRandomSaizi(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RandomSaizi",stuff)
    if not message.reason_type then
        Player.LogWarning("reason_type is nil")
        return
    end
    if message.reason_type == "REASON_TYPE_START" then
        local count = 0
        local number1 = 1
        local number2 = 1
        for k,v in pairs(message.random_result) do
            count = count + 1
            if count == 1 then
                number1 = v
            elseif count == 2 then
                number2 = v
            end
        end
        Player.MahJong.PlayDoubleDices(number1,number2)
    elseif message.reason_type == "REASON_TYPE_TINGPAI" then
        for k,v in pairs(message.random_result) do
            Player.LogWarning("Player.isTingPaied:")
            Player.LogWarning(v)
            Player.LogWarning(message.pai.card_value)
            Player.LogWarning(message.pai.card_type)
            if Player.isTingPaied then
                --Player.baopai_calculate_data = message.pai
                Player.MahJong.PlayerSingleDice(v,message.pai,message.has_rand_saizi)
            else
                Player.MahJong.PlayerSingleDice(v,nil,message.has_rand_saizi)
            end
            break
        end
    end
end

function Player.OnRoomAll(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RoomAll",stuff)
    local playerPos = -1
    if message.curr_operator_position ~= "POSITION_TYPE_NULL" then
        playerPos = ClickEvent.PlayerPosition(message.curr_operator_position)
    end
    if playerPos == 0 then
        ClickEvent.notPushPassMsg = true
        Player.MahJong.SetCurrentState(operationState.DAPAI)
    end
    if message.current_rounds then
        ClickEvent.UpdateRoundNumber(message.current_rounds,Player._room_information.options.open_rands)
    end
    if message.list then
        Player._calculate_table_number = 0
        for i=0,3 do
            Player.playerScore[i] = 0
        end
        for k,v in pairs(message.list) do
            Player._calculate_table_number = Player._calculate_table_number + 1
            Player._all_calculate_data[Player._calculate_table_number] = v
            for dataKey,data in pairs(v.list) do
                local currentPositionData
                for j,m in pairs(Player._all_players_data) do
                    if data.player_id == m.common_prop.player_id then
                        currentPositionData = m
                        break
                    end
                end
                local tempX = ClickEvent.PlayerPosition(currentPositionData.position)
                Player.playerScore[tempX] = Player.playerScore[tempX] + data.score
            end
        end
        ClickEvent._play_ui.playerAvatarInfo:GetChild("DouNum").text = tostring(Player.playerScore[0])
        ClickEvent._play_ui.behindPlayerAvatarInfo:GetChild("DouNum").text = tostring(Player.playerScore[1])
        ClickEvent._play_ui.oppositePlayerAvatarInfo:GetChild("DouNum").text = tostring(Player.playerScore[2])
        ClickEvent._play_ui.frontPlayerAvatarInfo:GetChild("DouNum").text = tostring(Player.playerScore[3])
    end
    local count = 0
    local number1 = 1
    local number2 = 1
    for k,v in pairs(message.saizi_random_result) do
        count = count + 1
        if count == 1 then
            number1 = v
        elseif count == 2 then
            number2 = v
        end
    end
    ClickEvent.CloseOperationPanel()
    ClickEvent.BankerStateUpdate(message.zhuang_position)
    Player.MahJong.SynDoubleDices(number1,number2)
    ClickEvent.SetRemainNum(message.remain_cards_count)
    if message.curr_operator_position ~= "POSITION_TYPE_NULL" then
        Player.MahJong.UpdateWhoseTurn(message.curr_operator_position)
    end
    Player.MahJong.ReturnRoomSync(message.player_list)
    if message.remain_cards_count and message.remain_cards_count ~= 0 then
        Player.MahJong.ModelPoolDelete(136 - message.remain_cards_count)
    else
        Player.hasBeginned = false
    end
    for k,v in pairs(message.player_list) do
        if v.player_id == Player._my_player_data.common_prop.player_id then
            if v.tingpai and v.tingpai == true then
                Player.LogWarning("jxyTingPai")
                if message.zhuapai and message.zhuapai.card_value ~= 0 then
                    Player._ting_pai_cache = {}
                    Player._ting_pai_cache[0] = {}
                    Player._ting_pai_cache[0].card_type = message.zhuapai.card_type
                    Player._ting_pai_cache[0].card_value = message.zhuapai.card_value
                end
                Player.MahJong.TinePaiSync()
            end
        end
    end
    --baopai
    if message.baopai and message.baopai ~= {} then
        if message.baopai.card_value ~= 0 then
            ClickEvent.ShowBaoPai(message.baopai)
            Player.MahJong.SetCurrentState(operationState.DAPAI)
        end
    end
end

function Player.OnPaiNotify(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiNotify",stuff)
    if not message.data_type then
        Player.LogWarning("type is nil")
        return
    end
    if message.cards_remain then
        ClickEvent.SetRemainNum(message.cards_remain)
    end
    Player.LogWarning(message.data_type)
    if message.data_type == "CARDS_DATA_TYPE_START" then
        Player.hasBeginned = true
        Player.roomHasBegin = true
        --[[
        Player._invoke_table_test = message
        Player.ThreadFunction(Player.MahJong.CreatePlayerPaiTest)
        --]]
        if Player._my_player_data.common_prop.player_id ~= message.player_id then
            return
        end

        Player._invoke_table = message

        local countPai = 0
        for k,v in pairs(Player._invoke_table.pais) do
            for j,m in pairs(v.cards) do
                countPai = countPai + 1
            end 
        end
        
        Player.LogWarning("countPai----------------")
        Player.LogWarning(countPai)
        if countPai == 14 then
            ClickEvent.notPushPassMsg = true
            Player.MahJong.SetCurrentState(operationState.DAPAI)
        end
        Player.isPlaying = true
        ClickEvent.CloseAlready()
        Player.MahJong.CreatePlayerPai()
    elseif message.data_type == "CARDS_DATA_TYPE_FAPAI" then
        if Player.isGangPaiing == true then
            Player.isGangPaiing = false
            Player.MahJong.ModelPoolDelete(1,true)
        else
            Player.MahJong.ModelPoolDelete(1)
        end
        if message.pai and Player._my_player_data.common_prop.player_id == message.player_id then
            Player.MahJong.SetCurrentState(operationState.DAPAI)
            Player._fa_pai_cache = message.pai
            ClickEvent.notPushPassMsg = true
            Player.MahJong.UpdateWhoseTurn(Player._my_player_data.position)
            Player.MahJong.ZhuaPai()
        else
            if Player._all_players_data then
                for k,v in pairs(Player._all_players_data) do
                    if v.common_prop.player_id == message.player_id then
                        Player.MahJong.AddOtherPai(v.position,1)
                        Player.MahJong.UpdateWhoseTurn(v.position)
                    end
                end
            end
        end
    elseif message.data_type == "CARDS_DATA_TYPE_SYNC" then
        Player._invoke_table_test = message
        --Player.ThreadFunction(
        Player.MahJong.CreatePlayerPaiTest()
    end
    --[[
    for k, v in pairs(message.pais) do
        Player.LogWarning(v.card_type)
        for i, m in pairs(v.cards) do
            Player.LogWarning(m)
        end
    end
    ]]
end
--操作
function Player.OnPaiOperation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiOperation",stuff)

    if not message.oper_type then
        Player.LogWarning("type is nil")
        return
    end
    Player.LogWarning(message.oper_type)
    --Player._pai_operation_alert_cache = message.pai

    if message.oper_type == "PAI_OPER_TYPE_DAPAI" then
        --Player.SetDaPaiCache(message)
        --Player.ThreadFunction(
        Player.MahJong.DeleteOtherPai(message.position,1)
        Player.MahJong.DaPaiPoolShow(message)
    elseif message.oper_type == "PAI_OPER_TYPE_HUPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Hu,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_GANGPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.MingGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_PENGPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Peng,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_CHIPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Chi,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_GIVEUP" then
        Player.LogWarning("give up operation")
    elseif message.oper_type == "PAI_OPER_TYPE_XUANFENG_FENG" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.MingGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_XUANFENG_JIAN" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.MingGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_ANGANGPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.AnGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_TINGPAI" then
        Player.MahJong.TingPai(message)
        Player.MahJong.DaPaiPoolShow(message)
        Player.MahJong.DeleteOtherPai(message.position,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Ting,false,1)
    else
        return
    end


    --[[
    switch = {
        ["PAI_OPER_TYPE_DAPAI"] = function( ... )
            -- body
            --message.position
            Player.SetDaPaiCache(message)
            Player.ThreadFunction(Player.MahJong.DaPaiPoolShow)
        end,
        ["PAI_OPER_TYPE_HUPAI"] = function( ... )
            -- body
        end,
        ["PAI_OPER_TYPE_GANGPAI"] = function( ... )
            -- body
            Player.SetPaiOperationShowCache(message)
            Player.ThreadFunction(Player.MahJong.OperationPaiShow)
        end,
        ["PAI_OPER_TYPE_PENGPAI"] = function( ... )
            -- body
            Player.SetPaiOperationShowCache(message)
            Player.ThreadFunction(Player.MahJong.OperationPaiShow)
        end,
        ["PAI_OPER_TYPE_CHIPAI"] = function( ... )
            -- body
            Player.SetPaiOperationShowCache(message)
            Player.ThreadFunction(Player.MahJong.OperationPaiShow)
        end,
        ["PAI_OPER_TYPE_GIVEUP"] = function ( ... )
            -- body
        end,
    }
    local result = switch[message.oper_type]
    result()
    --]]
end

function Player.OnGameOperation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameOperation", stuff)
    if not message.source_player_id then
        return
    end
    --Player.LogWarning(message.source_player_id)
    --Player.LogWarning(this._id)
    if message.source_player_id then
        --判断id是谁
        if message.source_player_id == this._id then
            --变化按钮
        else
            Player.LogWarning(message.source_player_id)
        end
    end
    if message.oper_type == "GAME_OPER_TYPE_START" then
        if not Player.isPlaying then
            ClickEvent.ShowAlready(message.source_player_id)
        end
    end
end

function Player.OnCreatePlayer(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.CreatePlayer", stuff)

    this._id = message.player_id
    Player.LogWarning(this._id)
end

function Player.OnCreateRoom(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.CreateRoom", stuff)
    this._roomId = message.room.room_id
    Player._room_information = message.room
    Player.CmdEnterRoom("ROOM_TYPE_FRIEND",this._roomId)
    --Player.LoadScene("PlaySence")
    --this._roomType = message.room.room_type
end

function Player.OnAlterError(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.AlterError", stuff)
    this.error_type = message.error_type
    this.error_show_type = message.error_show_type
    this.error_code = message.error_code
    Player.LogWarning(this.error_type)
    --Player.ThreadFunction(Player.LoadScene)
end
--踢玩家
function Player.OnKillOut(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.KickOut", stuff)
    --[[
    if Player._my_player_data.common_prop.player_id and Player._my_player_data.common_prop.player_id == message.player_id then
    end
    --]]
end

function Player.OnLoadSuccess()
    this.CmdEnterScene()
end
---------------------------------------------------------------------------
--
---------------------------------------------------------------------------
function Player.OnSayHi( type_t,stuff )
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.SayHi", stuff)
    if not message.heart_count then
        Player.LogWarning("heart_count is nil")
        return
    end
    local tempHertCount = message.heart_count + 1
    Player.CmdSayHi(tempHertCount)
    --[[
    --]]
    Player.sayHiTimestarmp = CS.UnityEngine.Time.time
end

function Player.CmdSayHi( heart_count_client )
    -- body
    local sayHi = {
        heart_count = heart_count_client,
    }
    this.SendProtocol("SayHi",sayHi)
end

---------------------------------------------------------------------------
--错误码提示
---------------------------------------------------------------------------
function Player.OnAlertMessage(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.AlertMessage", stuff)
    Player.LogWarning(message.error_code)
    ClickEvent.ShowToast(message.error_code)
end
---------------------------------------------------------------------------
--通用操作返回协议，模拟RPC处理流程
---------------------------------------------------------------------------
function Player.OnCommonOperation(type_t,stuff)
    if not stuff then
        return
    end
	local message = protobuf.decode("Adoter.Asset.CommonOperationResponse", stuff)
    FLibEvent.Fire(message.client_type_t, message.client_message)
end
---------------------------------------------------------------------------
--周围物体、玩家移动
---------------------------------------------------------------------------
function Player.OnSurroundChanged(stuff)
    logWarn('OnSurroundChanged...');
    local surrouds = P_Protocol.SurroundingsChanged()
    surrouds:ParseFromString(stuff)
    
    local entity_id = surrouds.entity_id
    logWarn(entity_id)
end
---------------------------------------------------------------------------
-----线程调用
---------------------------------------------------------------------------
function Player.ThreadFunction(invokeFunction)
    -- body
    --[[
    if Player.self then
        Player.self:Attach(invokeFunction)
    else
        Player.LogWarning("no init Player.self")
    end

    if Player.self then
        Player.SetinvokeFunctionCache(invokeFunction)
    else
        Player.LogWarning("no init Player.self")
    end
    --]]
    invokeFunction()
end
return Player