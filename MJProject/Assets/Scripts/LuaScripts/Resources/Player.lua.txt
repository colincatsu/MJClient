local protobuf = require "protobuf"
local AssetManager = require "AssetManager"
local LoadingCT = require "LoadingCT"

---------------------------------------------------------------------------
--成员变量
---------------------------------------------------------------------------
Player = {}
local LogWarning = CS.UnityEngine.Debug.LogWarning
local this = Player
local _player_data = nil --玩家登录数据
local _my_player_data = nil --房间内玩家数据
local _all_players_data = nil
local _id = nil
local _password = ""
local _roomId = nil
local _rightId = 0
local _crossId = 0
local _leftId = 0
local _invoke_data = ""
local _invoke_table = {}
local _invoke_table_test= {}
local _pai_operation_alert_cache = {} --玩家可进行操作的牌缓存
local _pais_operation_alert_cache = {} --玩家可进行操作的多张牌缓存
local _operation_alert_cache = {} --玩家可操作缓存
local _fa_pai_cache = {}
local _da_pai_cache = {}
_da_pai_cache.front = 1
_da_pai_cache.rear = 0
local _pai_operation_show_cache = {}
_pai_operation_show_cache.front = 1
_pai_operation_show_cache.rear = 0

local _ting_pai_cache = {}--听

local operationState = Enum.CreateEnumTable({"WAIT", "PENG", "GANG", "CHI", "HU", "DAPAI", "XUANFENGGANGFENG", "XUANFENGGANGJIAN", "ANGANG", "TINGPAI", "BAOPAI"},-1)

local _invokeFunctionTable = {}
_invokeFunctionTable.front = 1
_invokeFunctionTable.rear = 0

local _calculate_data = {}--结算数据
local _banker_position = 0
local _calculate_table_loader = {}--计算读表
local _tosence_name = nil
local _connected = false
local returnMainUI = false
local isTingPaied = false
local isTuoGuan = false
local isTingPaiTuoGuan = false
Player.huPaiPosition = 0
Player.wechat_nickname = ""
Player.wechat_sex = ""
Player.wechat_headimgurl = ""
local WeChatPlatform = CS.Platform.Instance
Player.isFriendRoom = false
Player.voiceRoomName = ""


function Player.GetinvokeFunctionCache()
    -- body
    if _invokeFunctionTable.front > _invokeFunctionTable.rear then
        return nil
    else
        local tempData = _invokeFunctionTable[_invokeFunctionTable.front]
        _invokeFunctionTable.front = _invokeFunctionTable.front + 1
        return tempData
    end
end
function Player.SetinvokeFunctionCache(cacheData)
    -- body
    _invokeFunctionTable.rear = _invokeFunctionTable.rear + 1
    _invokeFunctionTable[_invokeFunctionTable.rear] = cacheData
end

function Player.GetDaPaiCache()
    -- body
    if _da_pai_cache.front > _da_pai_cache.rear then
        return nil
    else
        local tempData = _da_pai_cache[_da_pai_cache.front]
        _da_pai_cache.front = _da_pai_cache.front + 1
        return tempData
    end
end
function Player.SetDaPaiCache(cacheData)
    -- body
    _da_pai_cache.rear = _da_pai_cache.rear + 1
    _da_pai_cache[_da_pai_cache.rear] = cacheData
end

function Player.GetPaiOperationShowCache()
    -- body
    if _pai_operation_show_cache.front > _pai_operation_show_cache.rear then
        return nil
    else
        local tempData = _pai_operation_show_cache[_pai_operation_show_cache.front]
        _pai_operation_show_cache.front = _pai_operation_show_cache.front + 1
        return tempData
    end
end
function Player.SetPaiOperationShowCache(cacheData)
    -- body
    _pai_operation_show_cache.rear = _pai_operation_show_cache.rear + 1
    _pai_operation_show_cache[_pai_operation_show_cache.rear] = cacheData
end
---------------------------------------------------------------------------
--获取玩家ID
---------------------------------------------------------------------------

function Player.GetID()
	return _my_player_data.common_prop.player_id
end


---------------------------------------------------------------------------
--游戏场景功能
---------------------------------------------------------------------------
--重置游戏ing
function Player.ResetGameState()
    -- 按钮
    ClickEvent._play_ui.oppositePlayerTing.visible = false
    ClickEvent._play_ui.frontPlayerTing.visible = false
    ClickEvent._play_ui.behindPlayerTing.visible = false
    ClickEvent._play_ui.playerTing.visible = false
    ClickEvent._play_ui.gamePlayButton.visible = false
    --玩家打牌池
    local dapaiFatherTemp = _pai_pool_show.point_d.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_d.father)
    _pai_pool_show.point_d.paiNumber = 0
    _pai_pool_show.point_d.father = CS.UnityEngine.GameObject("Father")
    _pai_pool_show.point_d.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_d.cards = {}

    dapaiFatherTemp = _pai_pool_show.point_n.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_n.father)
    _pai_pool_show.point_n.paiNumber = 0
    _pai_pool_show.point_n.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_n.cards = {}

    dapaiFatherTemp = _pai_pool_show.point_x.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_x.father)
    _pai_pool_show.point_x.paiNumber = 0
    _pai_pool_show.point_x.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_x.cards = {}

    dapaiFatherTemp = _pai_pool_show.point_b.father.transform.parent
    CS.UnityEngine.Object.Destroy(_pai_pool_show.point_b.father)
    _pai_pool_show.point_b.paiNumber = 0
    _pai_pool_show.point_b.father.transform:SetParent(dapaiFatherTemp)
    _pai_pool_show.point_b.cards = {}
    --碰牌池
    dapaiFatherTemp = _operation_pai_show.point_d.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_d.father)
    _operation_pai_show.point_d.paiNumber = 0
    _operation_pai_show.point_d.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_d.group = {}
    
    dapaiFatherTemp = _operation_pai_show.point_n.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_n.father)
    _operation_pai_show.point_n.paiNumber = 0
    _operation_pai_show.point_n.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_n.group = {}
    
    dapaiFatherTemp = _operation_pai_show.point_x.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_x.father)
    _operation_pai_show.point_x.paiNumber = 0
    _operation_pai_show.point_x.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_x.group = {}
    
    dapaiFatherTemp = _operation_pai_show.point_b.father.transform.parent
    CS.UnityEngine.Object.Destroy(_operation_pai_show.point_b.father)
    _operation_pai_show.point_b.paiNumber = 0
    _operation_pai_show.point_b.father.transform:SetParent(dapaiFatherTemp)
    _operation_pai_show.point_b.group = {}
    
    --玩家手牌
    CS.UnityEngine.Object.Destroy(_player_pai_pool._next_player_father)
    _player_pai_pool._next_player_father = CS.UnityEngine.GameObject("Father")
    _player_pai_pool._next_player_father.transform:SetParent(_player_pai_pool._next_player.transform)
    _player_pai_pool._next_pai_number = 0
    _player_pai_pool._next_card = {}

    CS.UnityEngine.Object.Destroy(_player_pai_pool._opposite_player_father)
    _player_pai_pool._opposite_player_father = CS.UnityEngine.GameObject("Father")
    _player_pai_pool._opposite_player_father.transform:SetParent(_player_pai_pool._opposite_player.transform)
    _player_pai_pool._opposite_pai_number = 0
    _player_pai_pool._opposite_card = {}

    CS.UnityEngine.Object.Destroy(_player_pai_pool._forward_player_father)
    _player_pai_pool._forward_player_father = CS.UnityEngine.GameObject("Father")
    _player_pai_pool._forward_player_father.transform:SetParent(_player_pai_pool._forward_player.transform)
    _player_pai_pool._forward_pai_number = 0
    _player_pai_pool._forward_card = {}

    --玩家面前牌
    CS.UnityEngine.Object.Destroy(_player_father.father)
    _player_father = {}
    ClickEvent._play_ui.gamePlayButton.visible = true
end


---------------------------------------------------------------------------
--加载场景!!!!!!!type_t，记得添加
---------------------------------------------------------------------------
function Player.LoadScene(senceName, buffer)
    for k,v in pairs(ClickEvent._createObject) do
        if type(v) == "table" then
            for j,c in pairs(v) do
                c:Dispose()
            end
        else
            v:Dispose()
        end
    end
    Player._tosence_name = senceName
    if senceName == "PlaySence" then
        Player.CmdLoadScene("LOAD_SCENE_TYPE_START",this._roomId)
    end
    CS.UnityEngine.Resources.UnloadUnusedAssets()
    CS.UnityEngine.Application.LoadLevel("LoadingSence")
end

---------------------------------------------------------------------------
--数据封装
---------------------------------------------------------------------------


function Player.CmdCreatePlayer()
    -- body
    local createPlayer = {}
    this.SendProtocol("CreatePlayer",createPlayer)
end


function Player.CmdLogin(name,passWord)
    -- body
    local login = {
        account = {
            username = name,--""
            --password = passWord,--""
        },
    }
    this.SendProtocol("Login",login)
end

function Player.CmdEnterGame(id)
    -- body
    local enterGame = {
        player_id = id,
    }
    this.SendProtocol("EnterGame",enterGame)
end

function Player.CmdCreateRoom(room_model,room_extend_type,room_top_mutiple,room_open_rands)
    -- body
    local createRoom ={
        room = {
            options = {
                model = room_model,
                extend_type = room_extend_type,
                top_mutiple = room_top_mutiple,
                open_rands = room_open_rands,
            },
            --room_id = roomId,--1,
            --room_name = name,--"123",
            --enter_password  = passWord,--"123",
        },
    }
    this.SendProtocol("CreateRoom",createRoom)
end

function Player.CmdEnterRoom(roomType,id,passWord)
    -- body
    local enterRoom = {
        room = {
            room_id = id,--2;
            room_type = roomType,
            --enter_password = passWord,--"123";
        },
        
    }
    this.SendProtocol("EnterRoom",enterRoom)
end

function Player.CmdGameOperation(operationType)
    -- body
    local gameOperation = {
       oper_type = operationType
    }
    this.SendProtocol("GameOperation",gameOperation)
end

function Player.CmdPaiOperation(paiOperType,paiChiTable,paiDaTable)
    -- body
    LogWarning("---------------ClientOperation")
    LogWarning(paiOperType)
    local paiOperation = {
        oper_type = paiOperType,
        pais = paiChiTable,
        pai = paiDaTable,
    }
    this.SendProtocol("PaiOperation",paiOperation)
end

---------------------------------------------------------------------------
--进入场景
---------------------------------------------------------------------------
function Player.CmdLoadScene(loadType,sceneId)
    local loadScene = {
        load_type = loadType,
        scene_id = sceneId,
    }
    LogWarning("jxyDebugLoadSence"..loadType)
    this.SendProtocol("LoadScene",loadScene)
end
---------------------------------------------------------------------------
--发送协议
---------------------------------------------------------------------------
---[[
function Player.SendProtocol(messageName,message)
    Network.SendProtocol(messageName,message)
end
---------------------------------------------------------------------------
--进入游戏
---------------------------------------------------------------------------
--[[
function Player.CmdEnterGame(player_id)
    local enter_game = P_Protocol.EnterGame()
    enter_game.player_id = player_id
    -------------------------------------------
    this.SendProtocol(enter_game)
end
--]]
--]]

--[[
    协议处理：
    
    1.在Network中注册接收协议对应的响应函数；
    
    2.在本文件中实现响应函数；
--]]
---------------------------------------------
--------------type_t!!!!!!!!!!!!
---------------------------------------------
--

function Player.OnCommonProperty(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.CommonProperty",stuff)
    if Player._player_data.common_prop.player_id == message.player_id then
        Player._player_data.common_prop = message.common_prop
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Bean,false,1)
        ClickEvent.CommonPropertyUpdate()
    end
end

function Player.OnLiuJu(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.LiuJu",stuff)
    Player.MahJong.LiuJuPai(message.elements)
end

function Player.OnPaiPushDown(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiPushDown",stuff)
    Player.MahJong.PaiPushDown(message.player_list)
end

function Player.OnGameInformation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameInformation",stuff)
    if not message.banker_player_id then
        LogWarning("banker_player_id is nil")
        return
    end
    if not Player._all_players_data then
        LogWarning("_all_players_data is nil")
        return
    end

    for k,v in pairs(Player._all_players_data) do
        if message.banker_player_id == v.common_prop.player_id then
            ClickEvent.BankerStateUpdate(v.position)
            break
        end
    end
end

function Player.OnGameCalculate(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameCalculate",stuff)
    Player._calculate_data = message
    --Player.ThreadFunction()
    Player.MahJong.OnRoundEndShowEffect(Player._calculate_data)
end

function Player.OnSyncCommonReward(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.SyncCommonReward",stuff)
end

function Player.OnRoomInformation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RoomInformation",stuff)
    if message.player_list then
        Player._all_players_data = message.player_list
        --if not Player._my_player_data then
            for k,v in pairs(Player._all_players_data) do
                if v.common_prop.player_id == Player._player_data.common_prop.player_id then
                    Player._my_player_data = v
                    --Player.ThreadFunction(
                    Player.MahJong.UpdateMyDataState()
                end
            end
        --end
        if Player._my_player_data then
            --Player.ThreadFunction(
            ClickEvent.RoomInformationUpdate()
        end
    else
        LogWarning("list null")
    end
end

function Player.OnPlayerInformation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PlayerInformation",stuff)
    if not message.player then
        return
    end
    --[[
    if not Player._player_data then
        Player._player_data = message.player
        --Player.ThreadFunction(
    else
    end
    --]]
    Player._player_data = message.player
    if Player._tosence_name ~= "PlaySence" then
        ClickEvent.ThreadToMainMenu()
    end
end

function Player.OnJoinRoomComplete(code,roomName, memberID)
    -- body
    WeChatPlatform.m_voiceengine:OpenMic()
    WeChatPlatform.m_voiceengine:OpenSpeaker()
end

function Player.OnEnterRoom(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.EnterRoom",stuff)
    if message.error_code == "ERROR_SUCCESS" then
        this._roomId = message.room.room_id
        Player.LoadScene("PlaySence")
    elseif message.error_code == "ERROR_ROOM_NOT_FOUNT" then
        LogWarning("no found")
    elseif message.error_code == "ERROR_ROOM_IS_FULL" then
        LogWarning("is full")
    end
end

function Player.OnPlayerList(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PlayerList",stuff)
    LogWarning("---------")
    if message.player_list then
        Player._id = message.player_list[1]
        LogWarning(Player._id)
    end
    if Player._id and Player_id ~= "" then
        Player.CmdEnterGame(Player._id)
    end
    --Player.ThreadFunction(ClickEvent.CreateNewPanel,ClickEvent.panelTable._choose_ui)
    --Player.CmdEnterGame(12)
end

function Player.OnPaiOperationAlert(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiOperationAlert",stuff)

    if not message.pais then
        LogWarning("pais data is nil")
        return
    end

    --[[
    if not message.pai then
        if not message.pais then
            LogWarning("pais is nil")
            return
        end
        Player._pais_operation_alert_cache = message.pais
    else
        Player._pai_operation_alert_cache = message.pai
    end
    --]]
    Player._operation_alert_cache = message
    Player.isTingPaiTuoGuan = false
    --Player.ThreadFunction(
    ClickEvent.PaiOperationState()
end

function Player.OnRandomSaizi(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.RandomSaizi",stuff)
    if not message.reason_type then
        LogWarning("reason_type is nil")
        return
    end
    if message.reason_type == "REASON_TYPE_START" then
        local count = 0
        local number1 = 1
        local number2 = 1
        for k,v in pairs(message.random_result) do
            count = count + 1
            if count == 1 then
                number1 = v
            elseif count == 2 then
                number2 = v
            end
        end
        Player.MahJong.PlayDoubleDices(number1,number2)
    elseif message.reason_type == "REASON_TYPE_TINGPAI" then
        for k,v in pairs(message.random_result) do
            print("Player.isTingPaied:")
            print(Player.isTingPaied)
            if Player.isTingPaied then
                Player.MahJong.PlayerSingleDice(v,message.pai,message.has_rand_saizi)
            else
                Player.MahJong.PlayerSingleDice(v,nil,message.has_rand_saizi)
            end
            break
        end
    end
end

function Player.OnPaiNotify(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiNotify",stuff)
    if not message.data_type then
        LogWarning("type is nil")
        return
    end
    if message.cards_remain then
        ClickEvent.SetRemainNum(message.cards_remain)
    end
    LogWarning(message.data_type)
    if message.data_type == "CARDS_DATA_TYPE_START" then
        --[[
        Player._invoke_table_test = message
        Player.ThreadFunction(Player.MahJong.CreatePlayerPaiTest)
        --]]
        if Player._my_player_data.common_prop.player_id ~= message.player_id then
            return
        end

        Player._invoke_table = message

        local countPai = 0
        for k,v in pairs(Player._invoke_table.pais) do
            for j,m in pairs(v.cards) do
                countPai = countPai + 1
            end
        end
        
        LogWarning("countPai----------------")
        LogWarning(countPai)
        if countPai == 14 then
            ClickEvent.notPushPassMsg = true
            Player.MahJong.SetCurrentState(operationState.DAPAI)
        end
        ClickEvent.CloseAlready()
        Player.MahJong.CreatePlayerPai()
    elseif message.data_type == "CARDS_DATA_TYPE_FAPAI" then
        Player.MahJong.ModelPoolDelete(1)
        if message.pai and Player._my_player_data.common_prop.player_id == message.player_id then
            Player.MahJong.SetCurrentState(operationState.DAPAI)
            Player._fa_pai_cache = message.pai
            ClickEvent.notPushPassMsg = true
            Player.MahJong.UpdateWhoseTurn(Player._my_player_data.position)
            Player.MahJong.ZhuaPai()
        else
            if Player._all_players_data then
                for k,v in pairs(Player._all_players_data) do
                    if v.common_prop.player_id == message.player_id then
                        Player.MahJong.AddOtherPai(v.position,1)
                        Player.MahJong.UpdateWhoseTurn(v.position)
                    end
                end
            end
        end
    elseif message.data_type == "CARDS_DATA_TYPE_SYNC" then
        Player._invoke_table_test = message
        --Player.ThreadFunction(
        Player.MahJong.CreatePlayerPaiTest()
    end
    --[[
    for k, v in pairs(message.pais) do
        LogWarning(v.card_type)
        for i, m in pairs(v.cards) do
            LogWarning(m)
        end
    end
    ]]
end
--操作
function Player.OnPaiOperation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.PaiOperation",stuff)

    if not message.oper_type then
        LogWarning("type is nil")
        return
    end
    LogWarning(message.oper_type)
    --Player._pai_operation_alert_cache = message.pai

    if message.oper_type == "PAI_OPER_TYPE_DAPAI" then
        --Player.SetDaPaiCache(message)
        --Player.ThreadFunction(
        Player.MahJong.DeleteOtherPai(message.position,1)
        Player.MahJong.DaPaiPoolShow(message)
    elseif message.oper_type == "PAI_OPER_TYPE_HUPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Hu,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_GANGPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.MingGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_PENGPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Peng,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_CHIPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Chi,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_GIVEUP" then
        LogWarning("give up operation")
    elseif message.oper_type == "PAI_OPER_TYPE_XUANFENG_FENG" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.MingGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_XUANFENG_JIAN" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.MingGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_ANGANGPAI" then
        --Player.SetPaiOperationShowCache(message)
        --Player.ThreadFunction(
        Player.MahJong.UpdateWhoseTurn(message.position)
        Player.MahJong.OperationPaiShow(message)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Gang,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Down,false,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.AnGang,false,1)
    elseif message.oper_type == "PAI_OPER_TYPE_TINGPAI" then
        Player.MahJong.TingPai(message)
        Player.MahJong.DaPaiPoolShow(message)
        Player.MahJong.DeleteOtherPai(message.position,1)
        AudioPlayer.PlaySound(AudioPlayer._audio_name.Ting,false,1)
    else
        return
    end


    --[[
    switch = {
        ["PAI_OPER_TYPE_DAPAI"] = function( ... )
            -- body
            --message.position
            Player.SetDaPaiCache(message)
            Player.ThreadFunction(Player.MahJong.DaPaiPoolShow)
        end,
        ["PAI_OPER_TYPE_HUPAI"] = function( ... )
            -- body
        end,
        ["PAI_OPER_TYPE_GANGPAI"] = function( ... )
            -- body
            Player.SetPaiOperationShowCache(message)
            Player.ThreadFunction(Player.MahJong.OperationPaiShow)
        end,
        ["PAI_OPER_TYPE_PENGPAI"] = function( ... )
            -- body
            Player.SetPaiOperationShowCache(message)
            Player.ThreadFunction(Player.MahJong.OperationPaiShow)
        end,
        ["PAI_OPER_TYPE_CHIPAI"] = function( ... )
            -- body
            Player.SetPaiOperationShowCache(message)
            Player.ThreadFunction(Player.MahJong.OperationPaiShow)
        end,
        ["PAI_OPER_TYPE_GIVEUP"] = function ( ... )
            -- body
        end,
    }
    local result = switch[message.oper_type]
    result()
    --]]
end

function Player.OnGameOperation(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.GameOperation", stuff)
    if not message.source_player_id then
        return
    end
    --LogWarning(message.source_player_id)
    --LogWarning(this._id)
    if message.source_player_id then
        --判断id是谁
        if message.source_player_id == this._id then
            --变化按钮
        else
            LogWarning(message.source_player_id)
        end
    end
    if message.oper_type == "GAME_OPER_TYPE_START" then
        ClickEvent.ShowAlready(message.source_player_id)
    end
end

function Player.OnCreatePlayer(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.CreatePlayer", stuff)

    this._id = message.player_id
    LogWarning(this._id)
end

function Player.OnCreateRoom(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.CreateRoom", stuff)
    this._roomId = message.room.room_id
    --Player.ThreadFunction(
    Player.LoadScene("PlaySence")
    --this._roomType = message.room.room_type
end

function Player.OnAlterError(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.AlterError", stuff)
    this.error_type = message.error_type
    this.error_show_type = message.error_show_type
    this.error_code = message.error_code
    LogWarning(this.error_type)
    --Player.ThreadFunction(Player.LoadScene)
end
--踢玩家
function Player.OnKillOut(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.KillOut", stuff)
    if Player._my_player_data.common_prop.player_id and Player._my_player_data.common_prop.player_id == message.player_id then

    end
end

function Player.OnLoadSuccess()
    this.CmdEnterScene()
end
---------------------------------------------------------------------------
--
---------------------------------------------------------------------------
function Player.OnSayHi( type_t,stuff )
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.SayHi", stuff)
    if not message.heart_count then
        LogWarning("heart_count is nil")
        return
    end
    local tempHertCount = message.heart_count + 1
    Player.CmdSayHi(tempHertCount)
end

function Player.CmdSayHi( heart_count_client )
    -- body
    local sayHi = {
        heart_count = heart_count_client,
    }
    this.SendProtocol("SayHi",sayHi)
end

---------------------------------------------------------------------------
--错误码提示
---------------------------------------------------------------------------
function Player.OnAlertMessage(type_t,stuff)
    -- body
    if not stuff then
        return
    end
    local message = protobuf.decode("Adoter.Asset.AlertMessage", stuff)
    
    ClickEvent.ShowToast(message.error_code)
end
---------------------------------------------------------------------------
--通用操作返回协议，模拟RPC处理流程
---------------------------------------------------------------------------
function Player.OnCommonOperation(type_t,stuff)
    if not stuff then
        return
    end
	local message = protobuf.decode("Adoter.Asset.CommonOperationResponse", stuff)
    FLibEvent.Fire(message.client_type_t, message.client_message)
end
---------------------------------------------------------------------------
--周围物体、玩家移动
---------------------------------------------------------------------------
function Player.OnSurroundChanged(stuff)
    logWarn('OnSurroundChanged...');
    local surrouds = P_Protocol.SurroundingsChanged()
    surrouds:ParseFromString(stuff)
    
    local entity_id = surrouds.entity_id
    logWarn(entity_id)
end
---------------------------------------------------------------------------
-----线程调用
---------------------------------------------------------------------------
function Player.ThreadFunction(invokeFunction)
    -- body
    --[[
    if Player.self then
        Player.self:Attach(invokeFunction)
    else
        LogWarning("no init Player.self")
    end

    if Player.self then
        Player.SetinvokeFunctionCache(invokeFunction)
    else
        LogWarning("no init Player.self")
    end
    --]]
    invokeFunction()
end
return Player