MainUICT = {}
local Enum = require "Enum"
local Player = require "Player"
local ClickEvent = require "ClickEvent"
local Network = require "Network"
local FLibEvent = require "FLibEvent"
local FairyGUI = require "FairyGUI"
local AssetManager = require "AssetManager"
local AudioPlayer = require "AudioPlayer"

local _main_ui_sence = "FairyMainUI"
local _loading_sence = "LoadingSence"
local _play_sence = "PlaySence"

local rapidjson = require "rapidjson"
local util = require "xlua.util"
local function AsyncYieldReturn(to_yield, cb)
    MainUICT.self:YieldAndCallback(to_yield, cb)
end
local yield_return = util.async_to_sync(AsyncYieldReturn)

local WeChatPlatform = CS.Platform.Instance
local httpUrlToken = "http://api.cloudbm.wang/auth/jwt"
local httpUrlServer = "http://api.cloudbm.wang/maintain/server"
local httpAppID = "snve1zlao934hhh323"
local httpAppSecret = "fiejfAJG%139*&sdfjNMJQA"
--[[
local isOn = false
local _Main_UI 
local _Choose_UI 
local _Player_Message_UI 
local _Other_Message_UI 
local _Store_UI 
local _Creat_Room_UI 
--]]
function MainUICT.Awake()
	-- body
	Player.self = MainUICT.self
	ClickEvent.self = MainUICT.self
	ClickEvent.Awake()
	if CS.LuaCommon.isIos == false then
		CS.UnityEngine.Screen.sleepTimeout = CS.UnityEngine.SleepTimeout.NeverSleep
	end
end

function MainUICT.Start()
	-- body
	--[[
	local path = CS.UnityEngine.Application.persistentDataPath.."/MyAssets"
	if CS.System.IO.Directory:Exists(path) == true then
		CS.System.IO.Directory.Delete(CS.UnityEngine.Application.persistentDataPath.."/MyAssets",true)
	end
	--]]
	if Player.hasTestPauseServer == false then
		MainUICT.TestServerState()
	end

	if not Player._connected then
		Network.Start()
		Network.ConnetServer()
	end
	ClickEvent.uiPanel.ui:GetChild("LoadingBar").visible = false
	if Player._connected then
		if Player.returnMainUI then
			ClickEvent.Start(ClickEvent.panelTable._choose_ui)
		else
			if Player._tosence_name and Player._tosence_name ~= "PlaySence" then
				ClickEvent.Start(ClickEvent.panelTable._main_ui)
			end
		end
	end
	Player.LoadData()
	--[[
	_Main_UI = self.transform:Find("MainUI").gameObject
	local admitButton = _Main_UI.transform:Find("Admit").gameObject
	isOn = admitButton:GetComponent("Toggle").isOn
	_Choose_UI = self.transform:Find("ChooseUI").gameObject
	_Choose_UI:SetActive(false)
	_Player_Message_UI = self.transform:Find("PlayerMessage").gameObject
	_Other_Message_UI = self.transform:Find("OtherMessage").gameObject
	_Store_UI = self.transform:Find("StoreUI").gameObject
	_Creat_Room_UI = self.transform:Find("CreatRoom").gameObject
	--]]

	---[[
	--]]
	--AudioPlayer.PlaySound(AudioPlayer._audio_name.Bgm,true,0.5)
end

function MainUICT.Update( ... )
	-- body
	Player.myUpdate()
	--[[
	if Player.self == self then
		local x = Player.GetinvokeFunctionCache()
		if x then
			x()
		end
	end
	print("jxy")
	--]]
end
function MainUICT.TestServerState()
	-- body
	local path = CS.UnityEngine.Application.persistentDataPath.."/"
	local httpTokenFile = io.open(path.."httpToken.txt")
	if not httpTokenFile then
		MainUICT.GetHttpToken(1)
	else
		Player.httpToken = httpTokenFile:read "*a"
        httpTokenFile:close()
		if Player.httpToken ~= "" then
	        MainUICT.RequestServerState()
	    else
	    	MainUICT.GetHttpToken(1)
		end
	end

end

function MainUICT.RandomString( ... )
	-- body
	math.randomseed(os.time())
	local outPut = ""
	for i=1,7 do
		local index = math.random(0,61)
		if index < 10 then
			outPut = outPut..tostring(index)
		elseif index >= 10 and index <= 35 then
			outPut = outPut..string.char(index + 55)
		elseif index >= 36 and index <= 61 then
			outPut = outPut..string.char(index + 61)
		end
	end
	return outPut
end

function MainUICT.GetHttpToken(whichFun,paraCode,openId)
	-- body
	local time = os.time()
	local nonce = MainUICT.RandomString()
	Player.LogWarning("app_id="..httpAppID.."&nonce="..nonce.."&time="..tostring(time)..httpAppSecret)
	local sign = WeChatPlatform:GetMd5String("app_id="..httpAppID.."&nonce="..nonce.."&time="..tostring(time).."&"..httpAppSecret)
	local header = {}
	header["User-Agent"] = "BH-MJProject"..Player.pc_version
	--Player.LogWarning("time:"..tostring(time))
	--Player.LogWarning("nonce:"..nonce)
	--Player.LogWarning(sign)
	local co = coroutine.create(function()
		local www = CS.UnityEngine.WWW(httpUrlToken.."?app_id="..httpAppID.."&time="..tostring(time).."&nonce="..nonce.."&sign="..sign,rapidjson.encode(header["User-Agent"]),header)
		yield_return(www)
		if not www.error then
			Player.LogWarning(www.text)
			local jsonData = rapidjson.decode(www.text)
			if jsonData.code == 0 then
				Player.httpToken = jsonData.data.jwt
				Player.LogWarning(jsonData.data.jwt)
				local path = CS.UnityEngine.Application.persistentDataPath.."/"
				local mFile = io.open(path.."httpToken.txt" ,"w")
		        mFile:write(Player.httpToken)
		        mFile:close()
		        if whichFun then
		        	if whichFun == 1 then
			        	MainUICT.RequestServerState()
		        	elseif whichFun == 2 then
		        		ClickEvent.GetUserInfoByCode(paraCode,openId)
		        	end
		        end
			else
				Player.LogWarning("httpException")
			end
		else
			CS.UnityEngine.Debug.LogWarning('error:'..www.error)
		end
    end)
    coroutine.resume(co)
end

function MainUICT.RequestServerState( ... )
	-- body
	Player.LogWarning("RequestServerState")
	local co = coroutine.create(function()
		local header = {}
		header.jwt = Player.httpToken
		header["User-Agent"] = "BH-MJProject"..Player.pc_version
		local www = CS.UnityEngine.WWW(httpUrlServer, rapidjson.encode(header.jwt), header)
		yield_return(www)
		if not www.error then
			local jsonData = rapidjson.decode(www.text)
			Player.LogWarning(jsonData.code)
			if jsonData.code == 0 then
				if jsonData.data.is_running == false then
					Player.LogWarning(jsonData.data.tips)
					ClickEvent.ShowSmallWindowByContent(jsonData.data.tips)
				end
				Player.hasTestPauseServer = true
			elseif jsonData.code == 200101 then
				Player.LogWarning("reset")
				MainUICT.GetHttpToken()
			else
				Player.LogWarning("httpException")
			end
			
		else
			CS.UnityEngine.Debug.LogWarning('error:'..www.error)
		end
    end)
    coroutine.resume(co)
end

return MainUICT
